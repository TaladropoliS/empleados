"""
Django settings for empleados project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
""" Instalar pip install python-decouple para proteger nuestras variables de entorno """
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False   # En PRODUCCION #######################################################
DEBUG = True  # lOCAL

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # utilidades
    'django.contrib.humanize',
    'ckeditor',
    # apps_locales
    'app.departamento.apps.DepartamentoConfig',
    'app.persona.apps.PersonaConfig',
    'app.core.apps.CoreConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'empleados.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'empleados.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

if DEBUG:  # ####################################################################
    # ##### DB Local MySQL
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.mysql',
    #         'NAME': config('DB_NAME_LOCAL'),
    #         'USER': config('DB_USER_LOCAL'),
    #         'PASSWORD': config('DB_PASSWORD_LOCAL'),
    #         'HOST': config('DB_HOST_LOCAL'),
    #         'PORT': config('DB_PORT_LOCAL'),
    #         "OPTION": {
    #             'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
    #         }
    #     }
    # }
    # ##### DB Local POSTGRES
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('P_DB_NAME_LOCAL'),
            'USER': config('P_DB_USER_LOCAL'),
            'PASSWORD': config('P_DB_PASSWORD_LOCAL'),
            'HOST': config('P_DB_HOST_LOCAL'),
            'PORT': config('P_DB_PORT_LOCAL'),
        }
    }
# db: dbempleados
# user: emple
# password: empleroot
else:
    # ##### DB Produccion
    DATABASES = {
        #     'default': {
        #         'ENGINE': 'django.db.backends.mysql',
        #         'NAME': config('DB_NAME'),
        #         'USER': config('DB_USER'),
        #         'PASSWORD': config('DB_PASSWORD'),
        #         'HOST': config('DB_HOST'),
        #         'PORT': '',
        #         "OPTION": {
        #             'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
        #         }
        #     }
    }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-cl'

TIME_ZONE = 'America/Santiago'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG:
    STATIC_ROOT = '/home/*****/***********/static/'  # ##### Crear en P*****A****** ######

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Ckeditor
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter',
             'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            # ['RemoveFormat', 'Source']
        ]
    }
}
